docker build -t ros/indigo:v1 . 
---------------------------------------------------------------
mac
#1
docker run -it --name v1 --user 0 -p 5901:5901 -p 6901:6901 -p 8022:22 -w /data/gps -v /Users/tsai/PycharmProjects/:/data -v /Users/tsai/Desktop/:/share -e VNC_PW=123456 ros/indigo:v1 /bin/bash

export ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:/data/gps:/data/gps/src/gps_agent_pkg

#2
docker run -it --name v2 --user 0 -p 5901:5901 -p 6901:6901 -p 8022:22 -w /data/gps -v /Users/tsai/PycharmProjects/:/data -v /Users/tsai/Desktop/:/share -e VNC_PW=123456 ros/indigo:v2 /bin/bash -c "/usr/sbin/sshd && /bin/bash"
---------------------------------------------------------------
windows
#1
docker run -it --name v1 --user 0 -p 5901:5901 -p 6901:6901 -w /data/gps -v C:\Users\tsaiwentage\PycharmProjects:/data -v C:\Users\tsaiwentage\Desktop:/headless/share -e VNC_PW=123456 ros/indigo:v1 /bin/bash

export ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:/data/gps:/data/gps/src/gps_agent_pkg

#2
docker commit -m "install sshserver and setup environment variable" 0d ros/indigo:v2 

docker run -it --name v2 --user 0 -p 5901:5901 -p 6901:6901 -p 8022:22 -w /data/gps -v C:\Users\tsaiwentage\PycharmProjects:/data -v C:\Users\tsaiwentage\Desktop:/headless/share -e VNC_PW=123456 ros/indigo:v2 /bin/bash -c "/usr/sbin/sshd && /bin/bash"

#git
docker run -it --name git --user 0 -p 5901:5901 -p 6901:6901 -p 8022:22 -w /data/gps -v C:\Users\tsaiwentage\Documents\GitHub:/data -v C:\Users\tsaiwentage\Desktop:/headless/share -e VNC_PW=123456 ros/indigo:v2 /bin/bash -c "/usr/sbin/sshd && /bin/bash"

---------------------------------------------------------------
docker exec -it v2 /bin/bash

roslaunch gps_agent_pkg pr2_gazebo.launch

python python/gps/gps_main.py pr2_example


---------------------------------------------------------------
runoob@runoob:~$ docker commit -a "runoob.com" -m "my apache" a404c6c174a2  mymysql:v1 

$ docker ps // 查看所有正在运行容器
$ docker stop containerId // containerId 是容器的ID

$ docker ps -a // 查看所有容器
$ docker ps -a -q // 查看所有容器ID

$ docker stop $(docker ps -a -q) //  stop停止所有容器
$ docker rm $(docker ps -a -q) //   remove删除所有容器